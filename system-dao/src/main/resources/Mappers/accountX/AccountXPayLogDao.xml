<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.system.dao.accountX.AccountXPayLogDao">

    <resultMap id="AllPayLogs" type="org.system.domain.accountX.AccountXPayLog">
        <!--column是只从数据库查到的字段名称-->
        <!--property是只Student类的属性-->
        <!--一般情况下, 这种map的目的在于隐藏数据库中的不想对外显示的数据, 并且需要建立新的类去封装这些需要显示的数据-->
        <result column="id" property="id"/>
        <result column="record_id" property="recordId"/>
        <result column="from_user" property="from"/>
        <result column="to_user" property="to"/>
        <result column="money" property="money"/>
    </resultMap>

    <select id="getPayLogByRecordId" resultMap="AllPayLogs" parameterType="java.lang.Integer">
        select * from accountx_paylog where record_id = #{id}
    </select>


    <insert id="insertNewPayLog" parameterType="org.system.domain.accountX.AccountXPayLog">
    INSERT into accountx_paylog (record_id,from_user,to_user,money)
    VALUES (#{recordId}, #{from}, #{to}, #{money})
    </insert>

    <!--<select id="getBillByTime" resultType="org.system.domain.accountX.AccountXBill" parameterType="java.lang.String">-->
    <!--select * from accountx_bill where date = #{date}-->
    <!--</select>-->

    <!--<insert id="insertNewBill" parameterType="org.system.domain.accountX.AccountXBill">-->
    <!--INSERT into accountx_bill (payer,money,date,note,record_id)-->
    <!--VALUES (#{payer}, #{money}, #{date}, #{note}, #{recordId})-->
    <!--</insert>-->

    <!--<delete id="DeleteBillById" parameterType="java.lang.Integer">-->
    <!--delete from accountx_bill where id  = #{id}-->
    <!--</delete>-->

    <!--<delete id="deleteAllBills">-->
    <!--delete from accountx_bill where record_id = -999-->
    <!--</delete>-->

</mapper>